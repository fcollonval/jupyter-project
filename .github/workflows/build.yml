name: Test

on:
  push:
    branches: master
  pull_request:
    branches: '*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Install node
      uses: actions/setup-node@v1
      with:
        node-version: '12.x'
    - name: Install Python
      uses: actions/setup-python@v1
      with:
        python-version: '3.7'
        architecture: 'x64'
    - name: Install dependencies
      run: python -m pip install wheel jupyterlab~=1.2 coverage[toml]

    - name: Test the extension
      run: |
        jlpm
        jlpm run lint:check
        jlpm run test

        pip install .[test]

        # Avoid the example jupyter_notebook_config.json to be read.
        mv jupyter_notebook_config.json example.json
        python -m coverage run -m pytest .
        python -m coverage report

        jupyter lab build
        jupyter serverextension list 1>serverextensions 2>&1
        cat serverextensions | grep "jupyter_project.*OK"
        jupyter labextension list 1>labextensions 2>&1
        cat labextensions | grep "jupyter-project.*OK"

        python -m jupyterlab.browser_check

    - name: Install Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 2.6
    - name: Coveralls
      env:
        COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
      run: |
        gem install coveralls-lcov
        coveralls-lcov -v -n coverage/coverage.info > coverage.json
        python -m pip install coveralls
        python -m coveralls --merge=coverage.json
